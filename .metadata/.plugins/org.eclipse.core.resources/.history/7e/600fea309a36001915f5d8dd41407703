package com.iadtec.hackathon.shared;

import java.util.List;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.domain.Specification;

@Transactional
public class BasicService<T extends BasicEntity, R extends BasicRepository<T>>  {
	
	@Autowired
	protected R repository;
	
	public Optional<T> findOne(Long id) {
		return repository.findById(id);
	}

	public List<T> findAll() {
		return repository.findAll();
	}
	
	public Page<T> findAll(Specification<T> spec, Pageable pageable){
		return repository.findAll(spec, pageable);
	}
	
	public Page<T> findAll(Pageable pageable){
		return repository.findAll(pageable);
	}

	public T save(T entity) {
		return repository.save(entity);
	}
	
	public T update(T entity) {
		return repository.save(entity);
	}
	
	public void delete(Long id) {
		if(repository.existsById(id)) {
			repository.deleteById(id);			
		}		
	}
	
	public Page<T> findAllPagination(int page, int pageSize, boolean ascending, String orderBy) {
		
		Pageable paginacao = PageRequest.of(page, pageSize, Sort.Direction.DESC, orderBy);

		if(ascending){
			paginacao = PageRequest.of(page, pageSize, Sort.Direction.ASC, orderBy);
		}

		return repository.findAll(paginacao);
	}

}
